{"ast":null,"code":"var _jsxFileName = \"/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/ExpenseItem.js\";\n// Import another component\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\n// Make project aware of corresponding css file\nimport \"./ExpenseItem.css\";\n\n// Props holds all the values (k:v pairs) that are passed in\n// Here props contains, date, title, amount\n// Can also create props using object destructuring from JS {}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  let title = props.title;\n  const clickHandler = () => {\n    title = \"Updated!\";\n  };\n  // Add Javascript code to function containing HTML\n  // Data is date object so can't be put in as a string\n  // Use curly braces for parameters or Javascript expression\n\n  // In React we can use DOM events for any HTML element\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpenseItem;\nexport default ExpenseItem;\n\n// Use a corresponding css file for the component.\n// Then import it to use it\n// <ExpenseDate /> is self-closing if no content between tags\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","jsxDEV","_jsxDEV","ExpenseItem","props","title","clickHandler","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","amount","onClick","_c","$RefreshReg$"],"sources":["/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["// Import another component\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\n// Make project aware of corresponding css file\nimport \"./ExpenseItem.css\";\n\n// Props holds all the values (k:v pairs) that are passed in\n// Here props contains, date, title, amount\n// Can also create props using object destructuring from JS {}\nfunction ExpenseItem(props) {\n  let title = props.title;\n\n  const clickHandler = () => {\n    title = \"Updated!\";\n  };\n  // Add Javascript code to function containing HTML\n  // Data is date object so can't be put in as a string\n  // Use curly braces for parameters or Javascript expression\n\n  // In React we can use DOM events for any HTML element\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n\n// Use a corresponding css file for the component.\n// Then import it to use it\n// <ExpenseDate /> is self-closing if no content between tags\n"],"mappings":";AAAA;AACA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,mBAAmB;;AAE1B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAK;EAEvB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBD,KAAK,GAAG,UAAU;EACpB,CAAC;EACD;EACA;EACA;;EAEA;EACA,oBACEH,OAAA,CAACF,IAAI;IAACO,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BN,OAAA,CAACH,WAAW;MAACU,IAAI,EAAEL,KAAK,CAACK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCX,OAAA;MAAKK,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCN,OAAA;QAAAM,QAAA,EAAKH;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBX,OAAA;QAAKK,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAACJ,KAAK,CAACU,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACNX,OAAA;MAAQa,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEX;AAACG,EAAA,GArBQb,WAAW;AAuBpB,eAAeA,WAAW;;AAE1B;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}