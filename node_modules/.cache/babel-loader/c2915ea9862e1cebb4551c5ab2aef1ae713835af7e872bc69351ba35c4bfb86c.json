{"ast":null,"code":"var _jsxFileName = \"/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/NewExpense/NewExpense.js\";\nimport React, { useState } from \"react\";\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      // Means to unpack the values inside\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    // Using props to pass values up to parent\n    // (Pass data so we're lifting the state up)\n    props.onAddExpense(expenseData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","jsxDEV","_jsxDEV","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveExpenseData","_c","$RefreshReg$"],"sources":["/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseForm from './ExpenseForm'\nimport './NewExpense.css'\n\nconst NewExpense = (props) => {\n  \n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      // Means to unpack the values inside\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    // Using props to pass values up to parent\n    // (Pass data so we're lifting the state up)\n    props.onAddExpense(expenseData)\n  }\n\n  return (\n    <div className='new-expense'>\n      {/* Use on because we're going to have a function for the prop to define \n      behaviour when something happens */}\n      <button>Add New Expense</button>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n    </div>\n  );\n};\n\nexport default NewExpense;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAG5B,MAAMC,sBAAsB,GAAIC,kBAAkB,IAAK;IACrD,MAAMC,WAAW,GAAG;MAClB;MACA,GAAGD,kBAAkB;MACrBE,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;IAC7B,CAAC;IACD;IACA;IACAP,KAAK,CAACQ,YAAY,CAACL,WAAW,CAAC;EACjC,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAG1BZ,OAAA;MAAAY,QAAA,EAAQ;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChChB,OAAA,CAACF,WAAW;MAACmB,iBAAiB,EAAEd;IAAuB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACE,EAAA,GAtBIjB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}