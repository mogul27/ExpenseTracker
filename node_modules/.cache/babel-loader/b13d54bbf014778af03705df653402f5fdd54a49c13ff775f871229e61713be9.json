{"ast":null,"code":"var _jsxFileName = \"/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/ExpensesList.js\";\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = props => {\n  // Alternative way to && below is to define a variable\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n\n  // Can use conditional returning if the entire JSX content changes\n  // when the if block is missing\n  if (props.items.length === 0) {\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesList;\nexport default ExpensesList;\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","jsxDEV","_jsxDEV","ExpensesList","props","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","items","length","className","map","expense","title","amount","date","id","_c","$RefreshReg$"],"sources":["/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/ExpensesList.js"],"sourcesContent":["\nimport ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\nconst ExpensesList = props => {\n\n// Alternative way to && below is to define a variable\nlet expensesContent = <p>No expenses found.</p>;\n\n// Can use conditional returning if the entire JSX content changes\n// when the if block is missing\nif (props.items.length === 0) {\n    return \n  }\n\n  return <ul className='expenses-list'>\n    {props.items.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        />\n    ))}\n  </ul>\n};\n\nexport default ExpensesList"],"mappings":";AACA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3B,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAE9B;EACA,IAAIC,eAAe,gBAAGH,OAAA;IAAAI,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAE/C;EACA;EACA,IAAIN,KAAK,CAACO,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B;EACF;EAEA,oBAAOV,OAAA;IAAIW,SAAS,EAAC,eAAe;IAAAP,QAAA,EACjCF,KAAK,CAACO,KAAK,CAACG,GAAG,CAAEC,OAAO,iBACvBb,OAAA,CAACF,WAAW;MAEVgB,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;MACvBC,IAAI,EAAEH,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AACP,CAAC;AAACU,EAAA,GArBIjB,YAAY;AAuBlB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}