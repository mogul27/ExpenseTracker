{"ast":null,"code":"var _jsxFileName = \"/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  // Define function insdie the arrow notation\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.toString().includes(filteredYear);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 43\n      }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\n{/* Can add special \"key\" prop to any item \n        This is why we add ID*/}\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","toString","includes","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","_c","$RefreshReg$"],"sources":["/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  // Define function insdie the arrow notation\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.toString().includes(filteredYear);\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {/* ? Is the Javascript ternary (if) so below is conditional\n        rendering. : is the shorthand for else */}\n        {/* With && if the condition is met then the part fter the \n        && operator is returned - use two here to check two different\n        conditions*/}\n        {filteredExpenses.length === 0 && <p>No expenses found</p>}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n        ))}\n      </Card>\n    </div>\n  );\n};\n{/* Can add special \"key\" prop to any item \n        This is why we add ID*/}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAACV,YAAY,CAAC;EACvD,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAAe,QAAA,eACEf,OAAA,CAACH,IAAI;MAACmB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBf,OAAA,CAACF,cAAc;QACbmB,QAAQ,EAAEb,YAAa;QACvBc,cAAc,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EAMDd,gBAAgB,CAACe,MAAM,KAAK,CAAC,iBAAIvB,OAAA;QAAAe,QAAA,EAAG;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACzDd,gBAAgB,CAACe,MAAM,GAAG,CAAC,IAC1Bf,gBAAgB,CAACgB,GAAG,CAAEb,OAAO,iBAC3BX,OAAA,CAACJ,WAAW;QAEV6B,KAAK,EAAEd,OAAO,CAACc,KAAM;QACrBC,MAAM,EAAEf,OAAO,CAACe,MAAO;QACvBd,IAAI,EAAED,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACgB,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCd,CAAC;AACD,+BADC;AAGD,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}