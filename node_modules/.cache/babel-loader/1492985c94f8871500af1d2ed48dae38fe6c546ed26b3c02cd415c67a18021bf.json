{"ast":null,"code":"var _jsxFileName = \"/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/NewExpense/NewExpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  _s();\n  const [formButton, setFormButton] = useState(\"unclicked\");\n  const addExpenseHandler = event => {\n    setFormButton(\"clicked\");\n  };\n  const cancelExpenseHandler = event => {\n    setFormButton(\"clicked\");\n  };\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      // Means to unpack the values inside\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    // Using props to pass values up to parent\n    // (Pass data so we're lifting the state up)\n    props.onAddExpense(expenseData);\n    setFormButton(\"unclicked\");\n  };\n  if (formButton === \"clicked\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense\",\n      children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n        onSaveExpenseData: saveExpenseDataHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cancelExpenseHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addExpenseHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NewExpense, \"K1sgBjTOsto+bgrVYjTlV+iIo1A=\");\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","jsxDEV","_jsxDEV","NewExpense","props","_s","formButton","setFormButton","addExpenseHandler","event","cancelExpenseHandler","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","className","children","onSaveExpenseData","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mogul/Documents/learning/Learning-Scratchpads/React/sec1-app/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css'\n\nconst NewExpense = (props) => {\n\n  const [formButton, setFormButton] = useState(\"unclicked\")\n\n  const addExpenseHandler = (event) => {\n    setFormButton(\"clicked\")\n  }\n\n  const cancelExpenseHandler = (event) => {\n    setFormButton(\"clicked\")\n  }\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      // Means to unpack the values inside\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    // Using props to pass values up to parent\n    // (Pass data so we're lifting the state up)\n    props.onAddExpense(expenseData)\n    setFormButton(\"unclicked\")\n  }\n\n  if (formButton === \"clicked\") {\n    return (\n      <div className='new-expense'>\n        {/* Use on because we're going to have a function for the prop to define \n        behaviour when something happens */}\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"new-expense\">\n      <button onClick={cancelExpenseHandler}>Add New Expense</button>\n      <button onClick={addExpenseHandler}>Add New Expense</button>\n    </div>\n\n  )\n  \n\n\n};\n\nexport default NewExpense;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAEzD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAAC,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMG,oBAAoB,GAAID,KAAK,IAAK;IACtCF,aAAa,CAAC,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMI,sBAAsB,GAAIC,kBAAkB,IAAK;IACrD,MAAMC,WAAW,GAAG;MAClB;MACA,GAAGD,kBAAkB;MACrBE,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;IAC7B,CAAC;IACD;IACA;IACAb,KAAK,CAACc,YAAY,CAACL,WAAW,CAAC;IAC/BN,aAAa,CAAC,WAAW,CAAC;EAC5B,CAAC;EAED,IAAID,UAAU,KAAK,SAAS,EAAE;IAC5B,oBACEJ,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAG1BlB,OAAA,CAACF,WAAW;QAACqB,iBAAiB,EAAEV;MAAuB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAEV;EAEA,oBACEvB,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BlB,OAAA;MAAQwB,OAAO,EAAEhB,oBAAqB;MAAAU,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DvB,OAAA;MAAQwB,OAAO,EAAElB,iBAAkB;MAAAY,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAMV,CAAC;AAACpB,EAAA,CA5CIF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}